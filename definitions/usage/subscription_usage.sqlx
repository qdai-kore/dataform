config {
    type: "incremental",
    uniqueKey: ["org_urn","subscription_urn","usage_type_id","period_id","usage_date"],
    schema: 'usage',
    bigquery: {
      partitionBy: "TIMESTAMP_TRUNC(exact_usage_date, MONTH)",
      clusterBy: ["org_urn","subscription_urn"]
    }
}

js {
  const last_n_days = dataform.projectConfig.vars.incremental_days;
  // Get start of previous day
  const prevDay = constants.getStartOfPreviousDay(last_n_days);

}

with latest_usage as 
(
  select array_agg(t order by etl_update desc limit 1)[offset(0)].*
  from etl_cpro.etl_subscription_usage t
    ${ when(incremental(), `WHERE etl_update >= '${prevDay}'`, `WHERE etl_update>='2023-06-01'`) }
  group by t.org_urn, t.subscription_urn, t.usage_type_id, t.period_id, t.usage_date
)

select 
    org_urn,
    subscription_id,
    service_type_id,
    subscription_urn,
    usage_type_id,
    period_id,
    usage,
    period_key,
    plan_urn,
    state,
    iccid,
    msisdn,
    plan_type_id,
    payment_option_id,
    cost_center_urn,
    usage_date exact_usage_date,
    DATE(usage_date) usage_date,
    time_stamp,
    etl_update
from latest_usage
