config { 
    type: 'incremental',
    schema: 'billing',
    tags: ['twilio','invoice'],
    uniqueKey: ["source_platform_code","invoice_billing_period","invoice_account_primary_id","sku_primary_id","owner_account_primary_id","transaction_direction","sku_key","sku_value","event_date","invoice_stream_type"],
    bigquery:{
      partitionBy:"DATE_TRUNC(event_date, MONTH)",
      clusterBy:["source_platform_code","invoice_billing_period","invoice_account_primary_id","sku_primary_id"]
    }
}

js {
  const last_n_days = dataform.projectConfig.vars.incremental_days;
  // Get start of previous day
  const prevDay = constants.getStartOfPreviousDay(last_n_days);

}


with grouped_eom as 
(
  select 
    t.source_platform_code, 
    t.invoice_billing_period,
    DATE_TRUNC(t.event_time,DAY) as event_date,
    t.invoice_account_primary_id,
    t.sku_primary_id,
    t.owner_account_primary_id,
    t.transaction_direction,
    sku_key_values.key as sku_key,
    sku_key_values.value as sku_value,
    sum(total) as total_revenue,
    sum(data_quantity) as total_quantity
  from ${ref("billing","tw_invoice_transactions_eom")} t
    LEFT JOIN UNNEST(t.extended_sku_grouping) sku_key_values
    ${ when(incremental(), `WHERE etl_update >= '${prevDay}'`, `WHERE etl_update>='2023-10-01'`) }
  group by 
    t.source_platform_code, 
    t.invoice_billing_period,
    event_date,
    t.invoice_account_primary_id,
    t.sku_primary_id,
    t.owner_account_primary_id,
    t.transaction_direction,
    sku_key_values.key,
    sku_key_values.value
),
grouped_jit as 
(
  select 
    t.source_platform_code, 
    t.invoice_billing_period,
    DATE_TRUNC(t.event_time,DAY) as event_date,
    t.invoice_account_primary_id,
    t.sku_primary_id,
    t.owner_account_primary_id,
    t.transaction_direction,
    sku_key_values.key as sku_key,
    sku_key_values.value as sku_value,
    sum(total) as total_revenue,
    sum(data_quantity) as total_quantity
  from ${ref("billing","tw_invoice_transactions_jit")} t
    LEFT JOIN UNNEST(t.extended_sku_grouping) sku_key_values
    ${ when(incremental(), `WHERE etl_update >= '${prevDay}'`, `WHERE etl_update>='2023-10-01'`) }
  group by 
    t.source_platform_code, 
    t.invoice_billing_period,
    event_date,
    t.invoice_account_primary_id,
    t.sku_primary_id,
    t.owner_account_primary_id,
    t.transaction_direction,
    sku_key_values.key,
    sku_key_values.value
)


select *, 'EOM' as invoice_stream_type from grouped_eom
union all
select *, 'JIT' as invoice_stream_type from grouped_jit


